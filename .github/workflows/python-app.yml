# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: 
      - master
      - Development
      - Test
  pull_request:
    branches: [ "master" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        pytest

  deploy_production:
    name: Deploy to Production
    needs: [build]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Deploy to production
        uses: johnbeynon/render-deploy-action@v0.0.8
        with:
          service-id: ${{ secrets.MASTER_SERVICE_ID }}
          api-key: ${{ secrets.MP_MASTER_API_KEY }}
          PROD_APP_SETTINGS: ${{ secrets.MASTER_APP_SETTINGS }}
          #DATABASE_URI: ${{ secrets.DATABASE_URL }}
          wait-for-success: true

  deploy_development:
    name: Deploy to Development
    needs: [build]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/Development'
    steps:
      - name: Deploy to Development
        uses: johnbeynon/render-deploy-action@v0.0.8
        with:
          service-id: ${{ secrets.DEVELOPMENT_SERVICE_ID }}
          api-key: ${{ secrets.MP_DEV_API_KEY}}
          PROD_APP_SETTINGS: ${{ secrets.DEVELOPMENT_APP_SETTING }}
          wait-for-success: true

  deploy_test:
    name: Deploy to Test
    needs: [build]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/Test'
    steps:
      - name: Deploy to Test
        uses: johnbeynon/render-deploy-action@v0.0.8
        with:
          service-id: ${{ secrets.TEST_SERVICE_ID }}
          api-key: ${{ secrets.MP_TEST_API_KEY}}
          PROD_APP_SETTINGS: ${{ secrets.TEST_APP_SETTING }}
          wait-for-success: true